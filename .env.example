# Environment Configuration
# Copy this file to .env and set your actual values

# Required Security Keys (MUST be set in production)
SECRET_KEY=your-secret-key-here-change-in-production
JWT_SECRET=your-jwt-secret-here-change-in-production

# Database Configuration
DATABASE_URL=sqlite:///./data/engineering_platform.db
# For PostgreSQL: postgresql+psycopg://user:password@localhost:5432/dbname
DB_HOST=localhost
DB_PORT=5432
DB_USER=mentor
DB_PASSWORD=mentor
DB_NAME=mentor

# Redis Configuration
# For Live Plan Mode SSE broadcasting (optional - uses in-memory if not set)
# IMPORTANT: Set REDIS_URL for production multi-server deployments
REDIS_URL=redis://localhost:6379/0
REDIS_RATE_LIMIT_TTL=3600

# Distributed Caching Configuration (PR-27)
# Enable/disable Redis-backed caching layer for hot data acceleration
CACHE_ENABLED=true                   # Enable distributed caching (default: true)
CACHE_DEFAULT_TTL_SEC=600            # Default cache TTL in seconds (10 minutes)
CACHE_MAX_VALUE_BYTES=262144         # Maximum cached value size in bytes (256 KB)

# Plan stream channel prefix
PLAN_CHANNEL_PREFIX=plan:

# Presence & Cursor Configuration (PR-22)
PRESENCE_TTL_SEC=60                  # Time before inactive user is considered offline
HEARTBEAT_SEC=20                     # Interval between heartbeat pings
PRESENCE_CLEANUP_INTERVAL_SEC=60     # How often to clean expired cache entries

# JWT Authentication Configuration (PR-23)
# Set JWT_ENABLED=true to require JWT tokens instead of DEV_* env variables
# Note: Token expiration is verified using the 'exp' claim in the JWT itself.
#       Configure expiration time (e.g., 3600 seconds = 1 hour) in your auth service.
JWT_ENABLED=false                    # Default: false (use dev shim for local development)
JWT_SECRET=your-jwt-secret-key-change-in-production-use-256-bit-key
JWT_ALGORITHM=HS256                  # Algorithm for JWT signature verification (HS256, RS256, etc.)
JWT_AUDIENCE=                        # Expected 'aud' claim (optional, e.g., api.example.com)
JWT_ISSUER=                          # Expected 'iss' claim (optional, e.g., auth.example.com)

# Expected JWT Claims:
# - sub: user_id (required)
# - org_id: organization ID (required)
# - role: user role - viewer/planner/admin (defaults to viewer if missing)
# - email: user's email address (optional)
# - name: display name (optional)
# - projects: list of accessible project IDs (optional)

# API Configuration
API_PORT=8002
REALTIME_API_PORT=8001

# AI Configuration
OPENAI_API_KEY=your-openai-api-key-here

# CORS Configuration
CORS_ORIGINS=http://localhost:3000,http://localhost:5173

# Application Settings
APP_ENV=dev
LOG_LEVEL=INFO
DEBUG=false
ENVIRONMENT=development

# Development Authentication Shims (Phase 1 - remove in Phase 2 with JWT/SSO)
# These env vars simulate authenticated user context for local development and CI
# In production, user context comes from JWT tokens
DEV_USER_ID=u-123
DEV_USER_EMAIL=dev@navralabs.io
DEV_USER_DISPLAY_NAME=Dev User
DEV_ORG_ID=org-1
DEV_USER_ROLE=planner  # Options: viewer, planner, admin (default: viewer)
DEV_PROJECTS=aep       # Comma-separated project IDs

# Policy File (optional - defaults to .aepolicy.json in repo root)
# POLICY_FILE=/path/to/custom/.aepolicy.json
