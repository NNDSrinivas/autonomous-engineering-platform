
"""Auto generated by Alembic - do not edit."""

revision = '872643470774'
down_revision = '0002_audit_log'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa

def upgrade() -> None:
    # Drop and recreate the table with proper INTEGER PRIMARY KEY for SQLite autoincrement
    op.drop_index("ix_audit_log_org_ts", table_name="audit_log")
    op.drop_index("ix_audit_log_ts", table_name="audit_log")
    op.drop_table("audit_log")
    
    op.create_table(
        "audit_log",
        sa.Column("id", sa.Integer, primary_key=True, autoincrement=True),
        sa.Column("ts", sa.DateTime, server_default=sa.func.now()),
        sa.Column("org_id", sa.Text, nullable=True),
        sa.Column("user_email", sa.Text, nullable=True),
        sa.Column("service", sa.Text, nullable=False),
        sa.Column("method", sa.Text, nullable=False),
        sa.Column("path", sa.Text, nullable=False),
        sa.Column("status", sa.Integer, nullable=False),
        sa.Column("req_id", sa.Text, nullable=True),
    )
    op.create_index("ix_audit_log_ts", "audit_log", ["ts"])
    op.create_index("ix_audit_log_org_ts", "audit_log", ["org_id", "ts"])

def downgrade() -> None:
    op.drop_index("ix_audit_log_org_ts", table_name="audit_log")
    op.drop_index("ix_audit_log_ts", table_name="audit_log")
    op.drop_table("audit_log")
    
    op.create_table(
        "audit_log",
        sa.Column("id", sa.BigInteger, primary_key=True, autoincrement=True),
        sa.Column("ts", sa.DateTime, server_default=sa.text("(datetime('now'))")),
        sa.Column("org_id", sa.Text, nullable=True),
        sa.Column("user_email", sa.Text, nullable=True),
        sa.Column("service", sa.Text, nullable=False),
        sa.Column("method", sa.Text, nullable=False),
        sa.Column("path", sa.Text, nullable=False),
        sa.Column("status", sa.Integer, nullable=False),
        sa.Column("req_id", sa.Text, nullable=True),
    )
    op.create_index("ix_audit_log_ts", "audit_log", ["ts"])
    op.create_index("ix_audit_log_org_ts", "audit_log", ["org_id", "ts"])
